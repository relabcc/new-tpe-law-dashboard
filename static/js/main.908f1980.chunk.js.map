{"version":3,"sources":["containers/CaseSummary/envelope.svg","containers/AreaGroupedBars/listicon.svg","components/ThemeProvider/FontSizeContext.js","components/ThemeProvider/theme.js","utils/memorize.js","components/ThemeProvider/global-styles.js","components/ThemeProvider/index.js","contexts/mediaQuery/mediaContext.js","contexts/mediaQuery/mqHook.js","contexts/mediaQuery/MediaProvider.js","contexts/api/Provider.js","components/Box.js","components/Flex.js","components/Text.js","components/FullpageHeight.js","components/Dropdown.js","containers/YearDropdown.js","components/Board.js","components/Heading.js","components/Image.js","components/Circle.js","components/StatsGroup.js","containers/CaseSummary/index.js","containers/TypeDonut/Donut.js","containers/TypeDonut/index.js","containers/PercentChart/ColumnChart.js","components/Icon.js","containers/PercentChart/index.js","containers/AreaGroupedBars/GroupedBars.js","containers/AreaGroupedBars/index.js","containers/useData.js","containers/useTexts.js","containers/HomePage.js","App.js","index.js"],"names":["module","exports","createContext","emToPx","em","breakpoints","map","containerWidth","responsiveIndex","responsiveMap","_","i","id","findIndex","length","font","fun","cache","memorize","args","argsLen","get","fonts","heading","body","mono","key","concat","range","colors","mapValues","palx","isArray","reduce","all","c","theme","primary","secondary","danger","text","bg","paleBlue","lightBlue","darkBlue","fontSize","css","children","ThemeProvider","width","size","Math","round","max","FontSizeContext","Provider","value","CSSReset","styles","globalStyles","bp","useMediaQuery","query","MediaQuery","q","mqHook","url","Box","Inline","props","as","display","verticalAlign","Absolute","position","FullAbs","top","left","right","bottom","Relative","Fixed","Invisible","height","overflow","opacity","Flex","Vertical","direction","Text","Bold","fontWeight","Thin","forEach","withWindowSize","windowSize","style","StyledDropdown","styled","Dropdown","themeGet","CustomDropdown","options","onChange","onBlur","placeholder","name","disabled","activeTypeOption","find","opt","defaultProps","defaultOptions","label","YearDropdown","useFetch","data","error","console","log","selected","Board","borderRadius","boxShadow","Heading","color","mimeTypes","gif","jpeg","jpg","png","tiff","tif","webp","base64Mime","ReImage","src","alt","pic","useMemo","sources","srcset","mime","exec","type","last","split","fallback","Image","s","displayName","Circle","border","borderColor","pt","transform","lineHeight","StatsGroup","values","showSep","textColor","px","py","index","child","my","mx","borderLeft","borderLeftColor","push","flex","textAlign","alignItems","justifyContent","CaseSummary","texts","envelope","H4","total","borderBottom","borderBottomColor","summary","toLocaleString","ml","med_total","meds","Donut","colorScale","innerRadius","labels","animate","duration","channel_label","mt","channel_title","channel","x","y","reverse","ColumnChart","transformData","months","res","dataset","d","pl","domainPadding","containerComponent","datum","labelComponent","flyoutWidth","month_axis_label","barWidth","dependentAxis","tickFormat","tick","month","Icon","PercentChart","month_title","areas","med_accepted","med_pending","med_rejected","voronoiDimension","offset","slice","AreaGroupedBars","area_title","GroupedBars","overflowY","p","mr","listicon","area_list","k","iconData","H6","area_list_label","totals","keys","dataHandler","defaultTexts","HomePage","React","useState","Date","getFullYear","year","setYear","Object","assign","useTexts","areaData","monthData","stats","areaname","entries","sortBy","useData","FullpageHeight","minWidth","H2","title","TypeDonut","App","ReactDOM","render","MediaProvider","document","getElementById"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qKCE5BC,0BAAc,I,2HCQvBC,EAAS,SAAAC,GAAE,gBAAY,GAALA,EAAP,OAEJC,EAAc,CAAC,GAAI,GAAI,GAAI,IAAIC,IAAIH,GACnCI,EAAiB,CAAC,GAAI,GAAI,GAAI,IAAID,IAAIH,GACtCK,EAAkB,CAC7B,CAAC,EAAG,UACJ,CAAC,EAAG,WAGAC,EAAgBJ,EAAYC,KAAI,SAACI,EAAGC,GACxC,IAAMC,EAAKJ,EAAgBK,WAAU,uCAAeF,KACpD,OAAOC,GAAM,EAAIA,EAAKJ,EAAgBM,UAWlCC,GC/BS,SAASC,GACtB,IAAMC,EAAQ,GDsBUC,EAAS,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC9C,IAAMC,EAAUD,EAAKL,OACrB,OAAIM,GAAW,EAAUD,EAAK,GACvBd,EAAYC,KAAI,SAACI,EAAGC,GAAJ,OAAUU,IAAIF,EAAM,CAACV,EAAcE,IAAK,YAKpD,sEACPW,EAAQ,CACZC,QAASR,EACTS,KAAMT,EACNU,KAAM,oBAGFC,EAAM,CAAC,IAAIC,OAAOC,IAAM,IAAK,IAAM,MACnCC,EAASC,IAAUC,IAAK,YAAY,SAAAF,GACxC,OAAIG,IAAQH,GACHA,EAAOI,QAAO,SAACC,EAAKC,EAAGxB,GAE5B,OADAuB,EAAIR,EAAIf,IAAMwB,EACPD,IACN,IAEEL,KAeM,6BACVO,KADL,IAEEd,QACAO,OAAO,uCACFO,IAAMP,QACNA,GAFC,IAGJQ,QAjBS,UAkBTC,UAAWjB,IAAIQ,EAAD,UAdA,QAcA,SACdU,OAAQlB,IAAIQ,EAAD,UAdA,MAcA,SACXW,KAbS,UAcTjB,QAZY,UAaZkB,GAhBO,UAiBPC,SArBa,UAsBbC,UAvBc,UAwBdC,SA1Ba,YA4BfvC,cACAE,mB,yOE3Ea,eAAAsC,GAAQ,OAAIC,YAAJ,IAIND,EACJT,EAAMP,OAAOW,KACFJ,EAAMP,OAAOY,KCCtB,kBAAGM,EAAH,EAAGA,SAAH,OACb,kBAACC,EAAA,EAAD,CAAeZ,MAAOA,GACpB,kBAAC,SAAD,MACG,YAA0B,IAAfa,EAAc,EAAtBC,KAAQD,MACJJ,EAAWM,KAAKC,MAAMD,KAAKE,IAAIJ,EAAO,KAAO,IACnD,OACE,6BACE,kBAACK,EAAgBC,SAAjB,CAA0BC,MAAO,CAAEpD,GAAIyC,IACrC,kBAAC,WAAD,KACE,kBAACY,EAAA,EAAD,MACA,kBAAC,IAAD,CAAQC,OAAQC,EAAad,KAC5BE,UCpBF7C,0BAAc,I,SCAd,WAAA0D,GACb,OAAOC,wBAAc,CAAEC,MAAM,eAAD,OAAiBF,EAAjB,QCYfG,EATI,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACdiB,EAAI3D,EAAYC,IAAI2D,GAC1B,OACE,kBAAC,EAAaV,SAAd,CAAuBC,MAAOQ,GAC3BjB,I,QCLQ,kBAAGA,EAAH,EAAGA,SAAH,OACb,kBAAC,IAAD,CAAUmB,IAHK,yCAIZnB,I,QCJUoB,IAAf,EAEAA,IAAIC,OAAS,SAACC,GAAD,OAAW,kBAACF,EAAA,EAAD,eAAKG,GAAG,OAAOC,QAAQ,eAAeC,cAAc,UAAaH,KACzFF,IAAIM,SAAW,SAACJ,GAAD,OAAW,kBAACF,EAAA,EAAD,eAAKO,SAAS,YAAeL,KACvDF,IAAIQ,QAAU,SAACN,GAAD,OAAW,kBAACF,EAAA,EAAIM,SAAL,eAAcG,IAAI,IAAIC,KAAK,IAAIC,MAAM,IAAIC,OAAO,KAAQV,KACjFF,IAAIa,SAAW,SAACX,GAAD,OAAW,kBAACF,EAAA,EAAD,eAAKO,SAAS,YAAeL,KACvDF,IAAIc,MAAQ,SAACZ,GAAD,OAAW,kBAACF,EAAA,EAAD,eAAKO,SAAS,SAAYL,KACjDF,IAAIe,UAAY,SAACb,GAAD,OAAW,kBAACF,EAAA,EAAIM,SAAL,eAAcxB,MAAM,IAAIkC,OAAO,IAAIC,SAAS,SAASC,QAAQ,KAAQhB,K,aCNhGiB,IAAKC,SAAW,SAAAlB,GAAK,OAAI,kBAACiB,EAAA,EAAD,eAAME,UAAU,UAAanB,KAEvCiB,QAAf,E,SCFAG,IAAKrB,OAAS,SAACC,GAAD,OAAW,kBAACoB,EAAA,EAAD,eAAMnB,GAAG,QAAWD,KAC7CoB,IAAKC,KAAO,SAACrB,GAAD,OAAW,kBAACoB,EAAA,EAAD,eAAME,WAAW,QAAWtB,KACnDoB,IAAKG,KAAO,SAACvB,GAAD,OAAW,kBAACoB,EAAA,EAAD,eAAME,WAAW,OAAUtB,KAElDzC,IAAM,EAAG,GAAGiE,SAAQ,SAACnE,GACnB+D,IAAK,IAAD,OAAK/D,IAAS,SAAC2C,GAAD,OAChB,kBAACoB,EAAA,EAAD,eACEnB,GAAE,WAAM5C,GACRmB,SAAQ,UAAK,EAAInB,EAAT,OACJ2C,QAKKoB,QAAf,E,iBCPeK,eANE,SAAC,GAAD,IAAG/C,EAAH,EAAGA,SAAUgD,EAAb,EAAaA,WAAe1B,EAA5B,gDACf,kBAAC,EAAD,eAAK2B,MAAO,CAAEb,OAAQY,EAAWZ,SAAcd,GAC5CtB,M,g5BCCL,IAEMkD,GAAiBC,aAAOC,KAAPD,CAAH,KAFC,UAcqBE,aAAS,yBAd9B,yCA0CfC,GAAiB,SAAC,GASjB,IARLC,EAQI,EARJA,QACAC,EAOI,EAPJA,SAEA/C,GAKI,EANJgD,OAMI,EALJhD,OAEAiD,GAGI,EAJJC,KAII,EAHJD,aACAE,EAEI,EAFJA,SACGtC,EACC,uFACEuC,EAAmBN,GAAWA,EAAQO,MAAK,SAACC,GAAD,OAASA,EAAItD,QAAUA,KACxE,OACE,kBAAC,EAAQa,EACP,kBAAC4B,GAAD,CACEM,SAAUA,EACVD,QAASA,EACT9C,MAAOoD,EACPH,YAAaA,EACbE,SAAUA,MAMlBN,GAAeU,aAAe,CAC5BR,SAAU,cAGGF,UCzETW,GAAiB,CACrB,CAAEC,MAAO,YAAQzD,MAAO,MAsBX0D,GAnBM,SAAC,GAAyB,IAGzCZ,EAHkB9C,EAAsB,EAAtBA,MAAO+C,EAAe,EAAfA,SAAe,EACpBY,YAAS,QAAS,KAAM,IAAxCC,EADoC,EACpCA,KAAMC,EAD8B,EAC9BA,MAMd,OALAC,QAAQC,IAAIH,GAERC,EACFf,EAAUU,GACDI,IAAMd,EAAUc,EAAK9G,KAAI,SAAAkD,GAAK,MAAK,CAAEyD,MAAM,GAAD,OAAKzD,EAAL,UAAeA,aAElE,kBAAC2C,GAAD,CACEG,QAASA,EACT9C,MAAOA,EACP+C,SAAU,SAAAiB,GAAQ,OAAIjB,EAASiB,EAAShE,QACxCiD,YAAY,wBACZ5D,SAAS,QACTI,MAAM,SCTGwE,GAVD,SAACpD,GAAD,OACZ,kBAAC,EAAD,eACEK,SAAS,WACTU,SAAS,SACTsC,aAAa,QACbC,UAAU,iCACNtD,K,UCNRuD,KAAQb,aAAe,CAErBc,MAAO,WAGTjG,IAAM,EAAG,GAAGiE,SAAQ,SAACnE,GACnBkG,KAAQ,IAAD,OAAKlG,IAAS,SAAC2C,GAAD,OACnB,kBAACuD,GAAA,EAAD,eACEtD,GAAE,WAAM5C,GACRmB,SAAQ,UAAK,EAAInB,EAAT,OACJ2C,QAKKuD,UAAf,E,+BCdME,GAAY,CAChBC,IAAK,YACLC,KAAM,aACNC,IAAK,aACLC,IAAK,YACLC,KAAM,aACNC,IAAK,aACLC,KAAM,cAGFC,GAAa,yBAEbC,GAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,IAAQpE,EAAY,6BACpCqE,EAAMC,mBAAQ,WAClB,OAAK3G,IAAQwG,GASN,CACLI,QATcJ,EAAIlI,KAAI,SAACuI,GACvB,IAAMC,EAAOR,GAAWS,KAAKF,GACvBG,EAAOF,EAAOA,EAAK,GAAKhB,GAAUmB,KAAKJ,EAAOK,MAAM,OAC1D,MAAO,CACLL,SACAG,WAKFG,SAAUF,KAAKT,IAXS,OAazB,CAACA,IACJ,OAAIxG,IAAQwG,GAER,kBAACY,GAAA,EAAD,eAAO9E,GAAG,WAAcD,GACrBqE,EAAIE,QAAQtI,KAAI,SAAC+I,EAAG1I,GAAJ,OAAU,0CAAQe,IAAKf,GAAO0I,OAC/C,yBAAKb,IAAKE,EAAIS,SAAUV,IAAKA,KAK5B,kBAACW,GAAA,EAAD,eAAOZ,IAAKA,EAAKC,IAAKA,GAASpE,KAGxCkE,GAAQxB,aAAe,CACrB9D,MAAO,QAGTsF,GAAQe,YAAc,UAEPf,UC9CTgB,GAAS,SAAC,GAAD,IAAGxG,EAAH,EAAGA,SAAUyG,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,YAAahH,EAAlC,EAAkCA,GAAI6B,EAAtC,EAAsCA,GAAOD,EAA7C,oEACb,kBAAC,EAAQA,EACP,kBAAC,EAAD,CAAKK,SAAS,WAAWgF,GAAG,QAC1B,kBAAC,EAAD,CACEhF,SAAS,WACTE,IAAI,IACJC,KAAK,IACLC,MAAM,IACNC,OAAO,IACP9B,MAAM,OACNyE,aAAa,MACb8B,OAAQA,EACRC,YAAaA,EACbhH,GAAIA,EACJ6B,GAAIA,GAEJ,kBAAC,EAAD,CACEM,IAAI,MACJC,KAAK,MACL8E,UAAU,wBACVjF,SAAS,WACTkF,WAAW,KAEV7G,OAkBXwG,GAAOD,YAAc,SAENC,UCzCTM,GAAa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAc3F,EAAY,gDAC/D,OACE,kBAAC,EAAD,eAAM5B,GAAG,wBAAwBiF,aAAa,MAAMuC,GAAG,MAAMC,GAAG,QAAQrC,MAAM,YAAexD,GAC1FyF,EAAO7H,QAAO,SAACC,EAAD,EAA+BiI,GAAW,IAAlClD,EAAiC,EAAjCA,MAAOY,EAA0B,EAA1BA,MAAOrE,EAAmB,EAAnBA,MAC7B4G,EAASD,GAASJ,EAAW,CACjC,kBAAC,EAAD,CAAKrI,IAAG,cAASyI,GAASE,GAAG,QAAQC,GAAG,SAASC,WAAW,YAAYC,gBAAgB,eACtF,GAWJ,OAVAJ,EAAMK,KACJ,kBAAC,EAAD,CAAK/I,IAAKyI,EAAOO,KAAK,IAAIC,UAAU,UAClC,kBAAC,EAAD,CAAMC,WAAW,SAASC,eAAe,UACvC,kBAAC,GAAD,CAAQ5H,MAAM,UAAUR,GAAIoF,IAC5B,kBAAC,EAAD,CAAMyC,GAAG,SAASzH,SAAS,UAAU8C,WAAW,OAAOkC,MAAOmC,GAAa,QAAS/C,IAEtF,kBAAC,EAAD,CAAM2C,WAAW,OAAOjE,WAAW,OAAO9C,SAAS,SAASM,KAAKC,MAAc,IAARI,GAAvE,OAIGtB,EAAIP,OAAOyI,KACjB,MAKTP,GAAW9C,aAAe,CACxBgD,SAAS,GAGIF,U,qBCYAiB,GAnCK,SAAC,GAA+B,IAA7B1D,EAA4B,EAA5BA,KAAM2D,EAAsB,EAAtBA,MAAU1G,EAAY,gCACjD,OACE,kBAAC,EAAQA,EACP,kBAAC,EAAD,CAAKpB,MAAO,GAAOqH,GAAG,OAAOD,GAAG,OAC9B,kBAAC,GAAD,CAAO7B,IAAKwC,QAEd,kBAAC,EAAD,KACE,kBAAC,GAAQC,GAAT,CAAYpI,SAAS,SAASkI,EAAMG,OACpC,kBAAC,EAAD,CAAMN,WAAW,WAAWP,GAAG,OAC7B,kBAAC,EAAD,CAAKK,KAAK,IAAIS,aAAa,eAAeC,kBAAkB,QAAQnB,GAAG,SACrE,kBAAC,EAAD,CACEpC,MAAM,UACN+B,WAAW,IACX/G,SAAS,SACT8C,WAAW,QACXyB,EAAKiE,QAAQH,MAAMI,mBAEvB,kBAAC,EAAD,CAAKC,GAAG,QAAQ1I,SAAS,UAAzB,YAGJ,kBAAC,EAAD,KACE,kBAAC,GAAQoI,GAAT,CAAYpI,SAAS,SAASkI,EAAMS,WACpC,kBAAC,GAAD,CACEnB,GAAG,MACHP,OAAQ1C,EAAKiE,QAAQI,KAAKnL,KAAI,WAAiBK,GAAjB,IAAGe,EAAH,EAAGA,IAAK8B,EAAR,EAAQA,MAAR,MAAwB,CACpDyD,MAAO8D,EAAMrJ,GACbmG,MAAOT,EAAKvF,OAAOlB,GACnB6C,iB,UCNGkI,GA1BD,SAAC,GAAuC,IAArCtE,EAAoC,EAApCA,KAAMvF,EAA8B,EAA9BA,OAAQkJ,EAAsB,EAAtBA,MAAU1G,EAAY,yCACnD,OACE,kBAAC,EAAD,eAAKK,SAAS,WAAWuF,GAAG,MAAS5F,GACnC,kBAAC,KAAD,CACE+C,KAAMA,EACNuE,WAAY9J,EACZ+J,YAAY,MACZC,OAAQ,kBAAM,MACdC,QAAS,CAAEC,SAAU,OAEvB,kBAAC,EAAD,CACErH,SAAS,WACTiG,UAAU,SACV/F,IAAI,MACJC,KAAK,MACL8E,UAAU,wBACV9B,MAAM,UACNlC,WAAW,QAEX,kBAAC,EAAD,CAAM9C,SAAS,SAAf,gBACA,kBAAC,EAAD,KAAOkI,EAAMiB,kBCSN7B,GA5BD,SAAC,GAA+B,IAA7B/C,EAA4B,EAA5BA,KAAM2D,EAAsB,EAAtBA,MAAU1G,EAAY,gCAC3C,OACE,kBAAC,EAAQA,EACP,kBAAC,GAAQ4G,GAAT,CACEgB,GAAG,OACH3B,GAAG,SACHzH,SAAS,SACTkI,EAAMmB,eACR,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAO9E,KAAMA,EAAK+E,QAAStK,OAAQuF,EAAKvF,OAAQkJ,MAAOA,IACvD,kBAAC,GAAD,CACEjB,OAAQ1C,EAAK+E,QAAQ7L,KAAI,WAAWK,GAAX,IAAGyL,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,MAAkB,CACzCxE,MAAOT,EAAKvF,OAAOlB,GACnBsG,MAAOmF,EACP5I,MAAO6I,MACLC,UACJtC,UAAU,QACVvH,GAAG,cACHsH,SAAS,EACTE,GAAG,MACHpH,SAAS,UACToJ,GAAG,Y,sECiCEM,GA/CK,SAAC,GAA+B,IAA7BnF,EAA4B,EAA5BA,KAAM2D,EAAsB,EAAtBA,MACrByB,GAD2C,gCAC3BpF,EAAKqF,OAAOxK,QAAO,SAACyK,EAAKC,GAI7C,OAHAA,EAAQ9G,SAAQ,SAAC+G,EAAGjM,GAClB+L,EAAI/L,GAAG8J,KAAKmC,MAEPF,IACN,CAAC,GAAI,GAAI,MACZ,OACE,kBAAC,EAAD,CAAKnC,WAAW,YAAYd,YAAY,YAAYoD,GAAG,QAAQtB,GAAG,UAChE,kBAAC,KAAD,CACEpG,OAAQ,IACRlC,MAAO,IACP6J,cAAe,CAAEV,EAAG,IACpBN,QAAS,CAAEC,SAAU,KACrBgB,mBACE,kBAAC,KAAD,CACE/G,MAAO,GACP6F,OAAQ,gBAAGmB,EAAH,EAAGA,MAAH,OACNA,EAAMX,EAAI,EAAV,UAAiBW,EAAMX,EAAvB,YAA4BtB,EAAMiC,EAAMtL,KAAxC,gBAAmD,MAErDuL,eAAgB,kBAAC,KAAD,CAAiBC,YAAa,SAIlD,kBAAC,KAAD,CACEb,EAAG,GACH7J,KAAMuI,EAAMoC,mBAEd,kBAAC,KAAD,CACExB,WAAYvE,EAAKvF,QAEhB2K,EAAclM,KAAI,SAACsM,EAAGjM,GACrB,OAAO,kBAAC,KAAD,CAAYyG,KAAMwF,EAAGQ,SAAU,GAAI1L,IAAKf,QAGnD,kBAAC,KAAD,CACE0M,eAAa,EACbC,WAAY,SAACC,GAAD,OAAUA,KAExB,kBAAC,KAAD,CACED,WAAY1L,IAAM,IAAItB,KAAI,SAAAkN,GAAK,gBAAOA,EAAQ,EAAf,kBCtC1BC,GAVF,SAAC,GAAD,IAAGrG,EAAH,EAAGA,KAAMvF,EAAT,EAASA,OAAQkJ,EAAjB,EAAiBA,MAAU1G,EAA3B,gDACX,kBAAC,EAAD,eAAMwG,eAAe,UAAaxG,GAC/B+C,EAAK9G,KAAI,WAAUK,GAAV,IAAGe,EAAH,EAAGA,IAAH,OACR,kBAAC,EAAD,CAAMkJ,WAAW,SAASN,GAAG,QAAQO,eAAe,SAASnJ,IAAKf,GAChE,kBAAC,GAAD,CAAQsC,MAAM,MAAMR,GAAIZ,EAAOlB,KAC/B,kBAAC,EAAD,CAAM2J,GAAG,SAAS3E,WAAW,OAAOkC,MAAM,QAAQkD,EAAMrJ,UCQjDgM,GAZM,SAAC,GAA+B,IAA7BtG,EAA4B,EAA5BA,KAAM2D,EAAsB,EAAtBA,MAAU1G,EAAY,gCAClD,OACE,kBAAC,EAAD,eAAK6F,GAAG,MAAMD,GAAG,SAAY5F,GAC3B,kBAAC,GAAQ4G,GAAT,CACEpI,SAAS,SACTkI,EAAM4C,aACR,kBAAC,GAAD,CAAavG,KAAMA,EAAM2D,MAAOA,IAChC,kBAAC,GAAD,CAAM3D,KAAMA,EAAKqF,OAAO,GAAI5K,OAAQuF,EAAKvF,OAAQkJ,MAAOA,M,yECsD/CwB,GArDK,SAAC,GAA+B,IAA7BnF,EAA4B,EAA5BA,KAAM2D,EAAsB,EAAtBA,MAAU1G,EAAY,gCAC3CmI,EAAgBpF,EAAKwG,MAAM3L,QAAO,SAACyK,EAAD,EAAwDvC,GAAW,IAA5DlD,EAA2D,EAA3DA,MAAO4G,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAU/E,OATArB,EAAI7G,SAAQ,SAAC8G,EAAShM,GACfA,EAEMA,IAAM+L,EAAI5L,OAAS,EAC5B6L,EAAQlC,KAAK,CAAE2B,EAAGnF,EAAOoF,EAAiB,IAAdyB,EAAmBpM,IAAK,gBAEpDiL,EAAQlC,KAAK,CAAE2B,EAAGnF,EAAOoF,EAAkB,IAAf0B,EAAoBrM,IAAK,iBAJrDiL,EAAQlC,KAAK,CAAE2B,EAAGnF,EAAOoF,EAAkB,IAAfwB,EAAoBnM,IAAK,oBAOlDgL,IACN,CAAC,GAAI,GAAI,KACN7K,EAASuF,EAAKvF,OAAOvB,KAAI,SAAAuH,GAAK,MAAI,CAACA,MAEzC,OADAP,QAAQC,IAAIiF,GAEV,kBAAC,EAAQnI,EACP,kBAAC,KAAD,CACEyI,cAAe,CAAEV,EAAG,IACpBnJ,MAAO,IACPkC,OAAQ,IACR2G,QAAS,CAAEC,SAAU,KACrBgB,mBACE,kBAAC,KAAD,CACE/G,MAAO,GACP6F,OAAQ,gBAAGmB,EAAH,EAAGA,MAAH,OAAe1F,QAAQC,IAAIyF,IACjCA,EAAMX,EAAI,EADW,UACJtB,EAAMiC,EAAMtL,MADR,OACe0B,KAAM4J,EAAMX,GAD3B,KACmC,MAE1D2B,iBAAiB,IACjBf,eAAgB,kBAAC,KAAD,CAAiBC,YAAa,QAIlD,kBAAC,KAAD,CAAce,OAAQ,GAAIjI,MAAO,CAAEoB,KAAM,CAAEnE,MAAO,MAC/CuJ,EAAclM,KAAI,SAACqM,EAAShM,GAAV,OACjB,kBAAC,KAAD,CAAcgL,WAAY9J,EAAOlB,GAAIe,IAAKf,GACxC,kBAAC,KAAD,CACEyG,KAAMuF,EAAQuB,MAAM,EAAG,IACvBd,SAAU,UAKlB,kBAAC,KAAD,CACEf,EAAG,GACHD,EAAG,GACH5J,KAAK,WCHA2L,GA7CS,SAAC,GAAqB,IAAnB/G,EAAkB,EAAlBA,KAAM2D,EAAY,EAAZA,MAC/B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAK9H,MAAO,GAAQR,GAAG,QAAQyH,GAAG,OAChC,kBAAC,EAAD,CAAMW,eAAe,gBAAgBD,WAAW,WAAWN,GAAG,OAC5D,kBAAC,GAAQW,GAAT,CAAYpI,SAAS,SAASkI,EAAMqD,YACpC,kBAAC,GAAD,CAAMhH,KAAMA,EAAKqF,OAAO,GAAI5K,OAAQuF,EAAKvF,OAAQkJ,MAAOA,KAE1D,kBAACsD,GAAD,CAAajH,KAAMA,EAAM2D,MAAOA,KAElC,kBAAC,EAAD,CAAK9H,MAAO,GAAQkC,OAAO,OAAOmJ,UAAU,SAASC,EAAE,OACrD,kBAAC,EAAD,CAAM3D,WAAW,UACf,kBAAC,EAAD,CAAK3H,MAAM,MAAMuL,GAAG,UAClB,kBAAC,GAAD,CAAOhG,IAAKiG,QAEd,kBAAC,GAAQxD,GAAT,CAAYrB,WAAW,IAAI/G,SAAS,SAASkI,EAAM2D,YAErD,kBAAC,EAAD,CAAKzC,GAAG,SACP7E,EAAKwG,MAAMM,MAAM,IAAI5N,KAAI,SAACqM,EAASgC,GAClC,IAAMC,EAAWtO,KAAIqM,GAAS,SAACnJ,EAAO9B,GAAR,MAC5B,CAAEA,MAAK8B,YAET,OACE,kBAAC,EAAD,CAAK9B,IAAKiN,GACR,kBAAC,EAAD,CAAM/D,WAAW,YACf,kBAAC,GAAQK,GAAT,CAAYrB,WAAW,IAAI/G,SAAS,UAAU2L,GAAG,UAAU7B,EAAQ1F,OACnE,kBAAC,GAAQ4H,GAAT,KAAa9D,EAAM+D,kBAErB,kBAAC,GAAD,CACEzE,GAAG,MACHP,OAAQ8E,EAASV,MAAM,GAAG5N,KAAI,WAAiBK,GAAjB,IAAGe,EAAH,EAAGA,IAAK8B,EAAR,EAAQA,MAAR,MAAwB,CACpDyD,MAAO8D,EAAMrJ,GACbmG,MAAOT,EAAKvF,OAAOlB,GACnB6C,sB,qBCxCZuL,GAAS,CACb,YACA,SAGIC,GAAO,CACX,eACA,eACA,eAGIC,GAAc,SAACrC,GACnB,IAAM1B,EAAQ0B,EAAE3K,QAAO,SAACyK,EAAD,GAErB,OADAA,GADyC,EAAZlJ,QAG5B,GAOH,OANkBoJ,EAAEtM,KAAI,gBAAG2G,EAAH,EAAGA,MAAH,MACtB,CACEoF,EAFoB,EAAU7I,MAEnB0H,EACXkB,EAAGnF,OCvBHiI,GAAe,CACnB,MAAS,yDACT,MAAS,uCACT,UAAa,6CACb,aAAgB,eAChB,aAAgB,qBAChB,YAAe,eACf,cAAiB,uCACjB,cAAiB,uCACjB,YAAe,iFACf,iBAAoB,uCACpB,WAAc,6CACd,UAAa,+DACb,gBAAmB,wCC4BNC,GA3BE,WAAO,IAAD,EACGC,IAAMC,UAAS,IAAIC,MAAOC,cAAgB,MAD7C,mBACdC,EADc,KACRC,EADQ,KAEf1E,EDAO,WAAO,IAAD,EACK5D,YAAS,QAAS,KAAM,IAAxCC,EADW,EACXA,KACR,OAFmB,EACLC,MACI6H,GACX9H,EAAOsI,OAAOC,OAAOT,GAAc9H,GAAQ,GCHpCwI,GACRxI,EFYO,SAACoI,GAAU,IAChBpI,EAASD,YAAS,aAAD,OAAcqI,GAAQ,KAAM,CAACA,IAA9CpI,KAER,OAAOuB,mBAAQ,WACb,IAAKvB,EAAM,OAAOA,EAClB,IAAMiE,EAAU,GACVoB,EAAS,GACToD,EAAW,GACjBzI,EAAKqE,KAAK5F,SAAQ,YAAuB,IAApB2H,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,MACpBkC,EAAY,GAClBlC,EAAM/H,SAAQ,YAA0B,IAAvBkK,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtBH,EAASG,GAAYH,EAASG,IAAa,GAC3ChB,GAAKnJ,SAAQ,SAACnE,GACZ2J,EAAQ3J,GAAO2J,EAAQ3J,IAAQ,EAC/B2J,EAAQ3J,IAAQqO,EAAMrO,GAEtBoO,EAAUpO,GAAOoO,EAAUpO,IAAQ,EACnCoO,EAAUpO,IAAQqO,EAAMrO,GAExBmO,EAASG,GAAUtO,GAAOmO,EAASG,GAAUtO,IAAQ,EACrDmO,EAASG,GAAUtO,IAAQqO,EAAMrO,MAEnCqN,GAAOlJ,SAAQ,SAAAnE,GACb2J,EAAQ3J,GAAO2J,EAAQ3J,IAAQ,EAC/B2J,EAAQ3J,IAAQqO,EAAMrO,GAEtBmO,EAASG,GAAUtO,GAAOmO,EAASG,GAAUtO,IAAQ,EACrDmO,EAASG,GAAUtO,IAAQqO,EAAMrO,SAGrC+K,EAAOhC,KACHuE,GAAK1O,KAAI,SAAAoB,GAAG,MAAK,CACjB0K,EAAGoB,EACH9L,MACA2K,EAAGyD,EAAUpO,GACb8B,MAAOsM,EAAUpO,WAIvB,IAAMkM,EAAQ8B,OAAOO,QAAQJ,GAAUvP,KAAI,mCAAE2G,EAAF,KAAS8I,EAAT,yBACzC9I,SACG+H,GAAK/M,QAAO,SAACC,EAAKR,GAEnB,OADAQ,EAAIR,GAAOqO,EAAMrO,GAAOqO,EAAMvE,UACvBtJ,IACN,QAEL,MAAO,CACL0L,MAAOsC,KAAOtC,EAAO,gBAAgBtB,UACrCjB,QAAS,CACPH,MAAOG,EAAQH,MACfO,KAAMuD,GAAK1O,KAAI,SAAAoB,GAAG,MAAK,CACrBA,MACA8B,MAAO6H,EAAQ3J,GAAO2J,EAAQG,eAGlCiB,SACAuC,QACAnN,OAAQ,CACNO,EAAMP,OAAOQ,QACbD,EAAMP,OAAOe,SACbR,EAAMP,OAAOc,WAEfwJ,QAAS8C,GAAY7H,EAAK+E,YAE3B,CAAC/E,IE5ES+I,CAAQX,GAErB,OADAlI,QAAQC,IAAIH,GAEV,kBAACgJ,EAAD,CAAgB7B,EAAE,MAAM8B,SAAU,KAChC,kBAAC,EAAD,CAAMzF,WAAW,SAASjF,WAAW,QACnC,kBAAC,GAAD,CAAcnC,MAAOgM,EAAMjJ,SAAUkJ,IACrC,kBAAC,EAAKa,GAAN,CAASzN,SAAS,SAASyH,GAAG,OAAOS,EAAMwF,QAE5CnJ,GACC,oCACE,kBAAC,GAAD,CAAO9C,GAAIgB,EAAM+E,GAAG,SAClB,kBAAC,GAAD,CAAa5H,GAAG,WAAWQ,MAAM,MAAMsL,EAAE,QAAQnH,KAAMA,EAAM2D,MAAOA,IACpE,kBAACyF,GAAD,CAAWvN,MAAM,MAAMmE,KAAMA,EAAM2D,MAAOA,IAC1C,kBAAC,GAAD,CAAc9H,MAAM,MAAMmE,KAAMA,EAAM2D,MAAOA,KAE/C,kBAAC,GAAD,CAAOV,GAAG,SACR,kBAAC,GAAD,CAAiBjD,KAAMA,EAAM2D,MAAOA,QCzBjC0F,OANf,WACE,OACE,kBAAC,GAAD,OCIJC,IAASC,OACP,kBAAC,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.908f1980.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/envelope.0df56668.svg\";","module.exports = __webpack_public_path__ + \"static/media/listicon.bd1cc40f.svg\";","import { createContext } from 'react'\r\n\r\nexport default createContext({})\r\n","import { theme } from \"@chakra-ui/core\";\r\nimport palx from 'palx'\r\n\r\nimport isArray from 'lodash/isArray';\r\nimport range from 'lodash/range';\r\nimport get from 'lodash/get';\r\nimport mapValues from 'lodash/mapValues';\r\n\r\nimport memorize from '../../utils/memorize'\r\n\r\nconst emToPx = em => `${em * 16}px`\r\n\r\nexport const breakpoints = [30, 48, 62, 80].map(emToPx)\r\nexport const containerWidth = [26, 44, 58, 76].map(emToPx)\r\nexport const responsiveIndex = [\r\n  [2, 'mobile'],\r\n  [3, 'tablet'],\r\n]\r\n\r\nconst responsiveMap = breakpoints.map((_, i) => {\r\n  const id = responsiveIndex.findIndex(([ri]) => ri > i)\r\n  return id >= 0 ? id : responsiveIndex.length\r\n})\r\n\r\nexport const responsive = memorize((...args) => {\r\n  const argsLen = args.length\r\n  if (argsLen <= 1) return args[0]\r\n  return breakpoints.map((_, i) => get(args, [responsiveMap[i]], null))\r\n});\r\n\r\nexport const mobileOrDesktop = responsive\r\n\r\nconst font = 'Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\r\nconst fonts = {\r\n  heading: font,\r\n  body: font,\r\n  mono: \"Menlo, monospace\",\r\n}\r\n\r\nconst key = [50].concat(range(100, 1000, 100))\r\nconst colors = mapValues(palx('#6980DB'), colors => {\r\n  if (isArray(colors)) {\r\n    return colors.reduce((all, c, i) => {\r\n      all[key[i]] = c\r\n      return all\r\n    }, {})\r\n  }\r\n  return colors\r\n})\r\n\r\nconst darkBlue = '#4863BD'\r\nconst blue = '#6980DB'\r\nconst lightBlue = '#B7C2F4'\r\nconst paleBlue = '#EBEFFF'\r\n\r\nconst secondary = 'green'\r\nconst danger = 'red'\r\nconst bg = '#F6F7FF'\r\nconst text = '#404B55'\r\n\r\nconst heading = '#403D88'\r\n\r\nexport default {\r\n  ...theme,\r\n  fonts,\r\n  colors: {\r\n    ...theme.colors,\r\n    ...colors,\r\n    primary: blue,\r\n    secondary: get(colors, `${secondary}.700`),\r\n    danger: get(colors, `${danger}.700`),\r\n    text,\r\n    heading,\r\n    bg,\r\n    paleBlue,\r\n    lightBlue,\r\n    darkBlue,\r\n  },\r\n  breakpoints,\r\n  containerWidth,\r\n};\r\n","// memorization for performance; don't use this for mutable function\r\nexport default function(fun) {\r\n  const cache = {};\r\n\r\n  return function(...args){\r\n    const key = JSON.stringify(args);\r\n\r\n    // fetch\r\n    let hit = cache[key];\r\n    if (typeof hit !== 'undefined') {\r\n      return typeof hit === 'object' && hit !== null\r\n        ? JSON.parse(JSON.stringify(hit))\r\n        : hit\r\n    }\r\n\r\n    // put\r\n    let result = fun.apply(this, args);\r\n    cache[key] = result;\r\n    setTimeout(() => { delete cache[key]; }, 60 * 60 * 1000); // ttl is 1 hour\r\n\r\n    return typeof result === 'object' && result !== null\r\n      ? JSON.parse(JSON.stringify(result))\r\n      : result\r\n  }\r\n}\r\n","import { css } from '@emotion/core'\r\n\r\nimport theme from './theme'\r\n\r\nexport default fontSize => css`\r\n  body {\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    font-size: ${fontSize}px;\r\n    color: ${theme.colors.text};\r\n    background-color: ${theme.colors.bg};\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { Fragment } from 'react';\r\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\r\nimport { Global } from '@emotion/core'\r\nimport { SizeMe } from 'react-sizeme'\r\n\r\nimport FontSizeContext from './FontSizeContext'\r\n\r\nimport globalStyles from './global-styles';\r\n\r\nimport theme from './theme';\r\n\r\nexport default ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <SizeMe>\r\n      {({ size: { width } }) => {\r\n        const fontSize = Math.round(Math.max(width, 800) / 94)\r\n        return (\r\n          <div>\r\n            <FontSizeContext.Provider value={{ em: fontSize }}>\r\n              <Fragment>\r\n                <CSSReset />\r\n                <Global styles={globalStyles(fontSize)} />\r\n                {children}\r\n              </Fragment>\r\n            </FontSizeContext.Provider>\r\n          </div>\r\n        )\r\n      }}\r\n    </SizeMe>\r\n  </ThemeProvider>\r\n);\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({})\r\n","import { useMediaQuery } from 'react-responsive'\r\n\r\nexport default bp => {\r\n  return useMediaQuery({ query: `(min-width: ${bp})` })\r\n}\r\n","import React from 'react';\r\n\r\nimport { breakpoints } from '../../components/ThemeProvider/theme';\r\nimport MediaContext from './mediaContext'\r\nimport mqHook from './mqHook'\r\n\r\nconst MediaQuery = ({ children }) => {\r\n  const q = breakpoints.map(mqHook)\r\n  return (\r\n    <MediaContext.Provider value={q}>\r\n      {children}\r\n    </MediaContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MediaQuery;\r\n","import React from 'react'\r\nimport { Provider } from 'use-http';\r\n\r\nconst BASE_URL = 'https://new-tpe-law-dash-api.relab.cc'\r\n\r\nexport default ({ children }) => (\r\n  <Provider url={BASE_URL}>\r\n    {children}\r\n  </Provider>\r\n)\r\n","import React from 'react';\r\nimport { Box } from \"@chakra-ui/core\";\r\n\r\nexport default Box\r\n\r\nBox.Inline = (props) => <Box as=\"span\" display=\"inline-block\" verticalAlign=\"middle\" {...props} />;\r\nBox.Absolute = (props) => <Box position=\"absolute\" {...props} />;\r\nBox.FullAbs = (props) => <Box.Absolute top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" {...props} />;\r\nBox.Relative = (props) => <Box position=\"relative\" {...props} />;\r\nBox.Fixed = (props) => <Box position=\"fixed\" {...props} />;\r\nBox.Invisible = (props) => <Box.Absolute width=\"0\" height=\"0\" overflow=\"hidden\" opacity=\"0\" {...props} />;\r\n","import React from 'react'\r\n\r\nimport { Flex } from \"@chakra-ui/core\";\r\n\r\nFlex.Vertical = props => <Flex direction=\"column\" {...props} />\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport { Text } from \"@chakra-ui/core\";\r\nimport range from 'lodash/range';\r\n\r\nText.Inline = (props) => <Text as=\"span\" {...props} />;\r\nText.Bold = (props) => <Text fontWeight=\"bold\" {...props} />;\r\nText.Thin = (props) => <Text fontWeight=\"200\" {...props} />;\r\n\r\nrange(1, 7).forEach((key) => {\r\n  Text[`H${key}`] = (props) => (\r\n    <Text\r\n      as={`h${key}`}\r\n      fontSize={`${5 - key}xl`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Text\r\n","import React from 'react';\r\nimport { withWindowSize } from 'libreact/modules/WindowSizeSensor';\r\n\r\nimport Box from './Box'\r\n\r\nconst Fullpage = ({ children, windowSize, ...props }) => (\r\n  <Box style={{ height: windowSize.height }} {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default withWindowSize(Fullpage);\r\n","import React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport themeGet from '@styled-system/theme-get';\r\nimport Box from './Box'\r\n\r\nconst borderRadius = '0.125em'\r\n\r\nconst StyledDropdown = styled(Dropdown)`\r\n  .Dropdown-control {\r\n    border: none;\r\n    border-radius: ${borderRadius};\r\n    text-align: center;\r\n    background-color: white;\r\n    color: black;\r\n    font-family: inherit;\r\n    padding: 0.25em;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    transition: none;\r\n    box-shadow: 0.125em 0.125em 0.125em ${themeGet('colors.blackAlpha.300')};\r\n  }\r\n  &.is-open {\r\n    .Dropdown-control {\r\n      border-radius: ${borderRadius} ${borderRadius} 0 0;\r\n    }\r\n  }\r\n  .Dropdown-placeholder {\r\n\r\n  }\r\n  .Dropdown-menu {\r\n    border: 1px solid;\r\n    transform: translateY(1px);\r\n    border-radius: 0 0 ${borderRadius} ${borderRadius};\r\n  }\r\n  .Dropdown-option {\r\n    color: inherit;\r\n    text-align: center;\r\n    padding: 0.5em 1em;\r\n    border-bottom: 1px solid gray;\r\n  }\r\n  .Dropdown-arrow {\r\n    border-color: black transparent transparent;\r\n    top: 0.8em;\r\n    right: 0.5em;\r\n  }\r\n`\r\n\r\nconst CustomDropdown = ({\r\n  options,\r\n  onChange,\r\n  onBlur,\r\n  value,\r\n  name,\r\n  placeholder,\r\n  disabled,\r\n  ...props\r\n}) => {\r\n  const activeTypeOption = options && options.find((opt) => opt.value === value)\r\n  return (\r\n    <Box {...props}>\r\n      <StyledDropdown\r\n        onChange={onChange}\r\n        options={options}\r\n        value={activeTypeOption}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nCustomDropdown.defaultProps = {\r\n  onChange: () => {},\r\n}\r\n\r\nexport default CustomDropdown;\r\n","import React from 'react'\r\nimport useFetch from 'use-http'\r\n\r\nimport Dropdown from '../components/Dropdown'\r\n\r\nconst defaultOptions = [\r\n  { label: '109年', value: 109 },\r\n]\r\n\r\nconst YearDropdown = ({ value, onChange }) => {\r\n  const { data, error } = useFetch('years', null, []) // onMount\r\n  console.log(data)\r\n  let options\r\n  if (error) {\r\n    options = defaultOptions\r\n  } else if (data) options = data.map(value => ({ label: `${value}年`, value }))\r\n  return (\r\n    <Dropdown\r\n      options={options}\r\n      value={value}\r\n      onChange={selected => onChange(selected.value)}\r\n      placeholder=\"載入中...\"\r\n      fontSize=\"1.5em\"\r\n      width=\"6em\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default YearDropdown\r\n","import React from 'react'\r\n\r\nimport Box from './Box'\r\n\r\nconst Board = (props) => (\r\n  <Box\r\n    position=\"relative\"\r\n    overflow=\"hidden\"\r\n    borderRadius=\"1.5em\"\r\n    boxShadow=\"1em 1em 1.5em rgba(0,0,0,0.2)\"\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport { Heading } from '@chakra-ui/core'\r\nimport range from 'lodash/range'\r\n\r\nHeading.defaultProps = {\r\n  // fontWeight: 400,\r\n  color: 'heading',\r\n}\r\n\r\nrange(1, 7).forEach((key) => {\r\n  Heading[`H${key}`] = (props) => (\r\n    <Heading\r\n      as={`h${key}`}\r\n      fontSize={`${5 - key}xl`}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Heading\r\n","import React, { useMemo } from 'react'\r\nimport isArray from 'lodash/isArray'\r\nimport last from 'lodash/last'\r\nimport { Image } from \"@chakra-ui/core\";\r\n\r\nconst mimeTypes = {\r\n  gif: 'image/gif',\r\n  jpeg: 'image/jpeg',\r\n  jpg: 'image/jpeg',\r\n  png: 'image/png',\r\n  tiff: 'image/tiff',\r\n  tif: 'image/tiff',\r\n  webp: 'image/webp',\r\n}\r\n\r\nconst base64Mime = /data:(\\w+\\/\\w+);base64/\r\n\r\nconst ReImage = ({ src, alt, ...props }) => {\r\n  const pic = useMemo(() => {\r\n    if (!isArray(src)) return null\r\n    const sources = src.map((srcset) => {\r\n      const mime = base64Mime.exec(srcset)\r\n      const type = mime ? mime[1] : mimeTypes[last(srcset.split('.'))]\r\n      return {\r\n        srcset,\r\n        type,\r\n      }\r\n    })\r\n    return {\r\n      sources,\r\n      fallback: last(src),\r\n    }\r\n  }, [src])\r\n  if (isArray(src)) {\r\n    return (\r\n      <Image as=\"picture\" {...props}>\r\n        {pic.sources.map((s, i) => <source key={i} {...s} />)}\r\n        <img src={pic.fallback} alt={alt} />\r\n      </Image>\r\n    )\r\n  }\r\n\r\n  return <Image src={src} alt={alt} {...props} />\r\n}\r\n\r\nReImage.defaultProps = {\r\n  width: '100%',\r\n};\r\n\r\nReImage.displayName = 'ReImage';\r\n\r\nexport default ReImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from './Box';\r\n\r\nconst Circle = ({ children, border, borderColor, bg, as, ...props }) => (\r\n  <Box {...props}>\r\n    <Box position=\"relative\" pt=\"100%\">\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"0\"\r\n        left=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        width=\"100%\"\r\n        borderRadius=\"50%\"\r\n        border={border}\r\n        borderColor={borderColor}\r\n        bg={bg}\r\n        as={as}\r\n      >\r\n        <Box\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          transform=\"translate(-50%, -50%)\"\r\n          position=\"absolute\"\r\n          lineHeight=\"0\"\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCircle.propTypes = {\r\n  children: PropTypes.node,\r\n  border: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bg: PropTypes.string,\r\n  as: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n  ]),\r\n};\r\n\r\nCircle.displayName = 'Circle';\r\n\r\nexport default Circle;\r\n","import React from 'react'\r\n\r\nimport Flex from './Flex'\r\nimport Box from './Box'\r\nimport Text from './Text'\r\nimport Circle from './Circle'\r\n\r\nconst StatsGroup = ({ values, showSep, textColor, ...props }) => {\r\n  return (\r\n    <Flex bg=\"rgba(255,255,255,0.6)\" borderRadius=\"1em\" px=\"1em\" py=\"0.5em\" color=\"darkBlue\" {...props}>\r\n      {values.reduce((all, { label, color, value }, index) => {\r\n        const child = (index && showSep) ? [\r\n          <Box key={`sep-${index}`} my=\"0.5em\" mx=\"0.25em\" borderLeft=\"2px solid\" borderLeftColor=\"lightBlue\" />\r\n        ] : []\r\n        child.push(\r\n          <Box key={index} flex=\"1\" textAlign=\"center\">\r\n            <Flex alignItems=\"center\" justifyContent=\"center\">\r\n              <Circle width=\"0.875em\" bg={color} />\r\n              <Text mx=\"0.25em\" fontSize=\"0.875em\" fontWeight=\"bold\" color={textColor || 'text'}>{label}</Text>\r\n            </Flex>\r\n            <Text lineHeight=\"1.75\" fontWeight=\"bold\" fontSize=\"1.5em\">{Math.round(value * 100)}%</Text>\r\n          </Box>\r\n        )\r\n\r\n        return all.concat(child)\r\n      }, [])}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nStatsGroup.defaultProps = {\r\n  showSep: true,\r\n}\r\n\r\nexport default StatsGroup\r\n","import React from 'react'\r\n\r\nimport Box from '../../components/Box'\r\nimport Flex from '../../components/Flex'\r\nimport Text from '../../components/Text'\r\nimport Heading from '../../components/Heading'\r\nimport Image from '../../components/Image'\r\nimport StatsGroup from '../../components/StatsGroup'\r\n\r\nimport envelope from './envelope.svg'\r\n\r\nconst CaseSummary = ({ data, texts, ...props }) => {\r\n  return (\r\n    <Box {...props}>\r\n      <Box width={1 / 2} mx=\"auto\" my=\"1em\">\r\n        <Image src={envelope} />\r\n      </Box>\r\n      <Box>\r\n        <Heading.H4 fontSize=\"1.5em\">{texts.total}</Heading.H4>\r\n        <Flex alignItems=\"flex-end\" my=\"1em\">\r\n          <Box flex=\"1\" borderBottom=\"0.25em solid\" borderBottomColor=\"white\" px=\"0.5em\">\r\n            <Text\r\n              color=\"primary\"\r\n              lineHeight=\"1\"\r\n              fontSize=\"3.25em\"\r\n              fontWeight=\"bold\"\r\n            >{data.summary.total.toLocaleString()}</Text>\r\n          </Box>\r\n          <Box ml=\"0.5em\" fontSize=\"1.25em\">件</Box>\r\n        </Flex>\r\n      </Box>\r\n      <Box>\r\n        <Heading.H4 fontSize=\"1.5em\">{texts.med_total}</Heading.H4>\r\n        <StatsGroup\r\n          my=\"1em\"\r\n          values={data.summary.meds.map(({ key, value }, i) => ({\r\n            label: texts[key],\r\n            color: data.colors[i],\r\n            value,\r\n          }))}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CaseSummary\r\n","import React from 'react'\r\nimport { VictoryPie } from 'victory'\r\n\r\nimport Box from '../../components/Box'\r\nimport Text from '../../components/Text'\r\n\r\nconst Donut = ({ data, colors, texts, ...props }) => {\r\n  return (\r\n    <Box position=\"relative\" px=\"5%\" {...props}>\r\n      <VictoryPie\r\n        data={data}\r\n        colorScale={colors}\r\n        innerRadius=\"100\"\r\n        labels={() => null}\r\n        animate={{ duration: 1000 }}\r\n      />\r\n      <Box\r\n        position=\"absolute\"\r\n        textAlign=\"center\"\r\n        top=\"50%\"\r\n        left=\"50%\"\r\n        transform=\"translate(-50%, -50%)\"\r\n        color=\"heading\"\r\n        fontWeight=\"bold\"\r\n      >\r\n        <Text fontSize=\"1.5em\">本年</Text>\r\n        <Text>{texts.channel_label}</Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Donut\r\n","import React from 'react'\r\nimport Box from '../../components/Box'\r\nimport Heading from '../../components/Heading'\r\nimport StatsGroup from '../../components/StatsGroup'\r\n\r\nimport Donut from './Donut'\r\n\r\nconst index = ({ data, texts, ...props }) => {\r\n  return (\r\n    <Box {...props}>\r\n      <Heading.H4\r\n        mt=\"1rem\"\r\n        mx=\"1.5rem\"\r\n        fontSize=\"1.5em\"\r\n      >{texts.channel_title}</Heading.H4>\r\n      <Box>\r\n        <Donut data={data.channel} colors={data.colors} texts={texts} />\r\n        <StatsGroup\r\n          values={data.channel.map(({ x, y }, i) => ({\r\n            color: data.colors[i],\r\n            label: x,\r\n            value: y\r\n          })).reverse()}\r\n          textColor=\"black\"\r\n          bg=\"transparent\"\r\n          showSep={false}\r\n          px=\"2em\"\r\n          fontSize=\"1.125em\"\r\n          mt=\"-1em\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\nimport {\r\n  VictoryChart,\r\n  VictoryStack,\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryLabel,\r\n  VictoryVoronoiContainer,\r\n  VictoryTooltip,\r\n} from 'victory'\r\nimport range from 'lodash/range';\r\n\r\nimport Box from '../../components/Box'\r\n\r\nconst ColumnChart = ({ data, texts, ...props }) => {\r\n  const transformData = data.months.reduce((res, dataset) => {\r\n    dataset.forEach((d, i) => {\r\n      res[i].push(d)\r\n    })\r\n    return res\r\n  }, [[], [], []])\r\n  return (\r\n    <Box borderLeft=\"1px solid\" borderColor=\"lightBlue\" pl=\"1.5em\" ml=\"-1.5em\">\r\n      <VictoryChart\r\n        height={320}\r\n        width={600}\r\n        domainPadding={{ x: 30 }}\r\n        animate={{ duration: 1000 }}\r\n        containerComponent={\r\n          <VictoryVoronoiContainer\r\n            style={{}}\r\n            labels={({ datum }) =>\r\n              datum.y > 0 ? `${datum.y} ${texts[datum.key]}案件` : null\r\n            }\r\n            labelComponent={<VictoryTooltip  flyoutWidth={120} />}\r\n          />\r\n        }\r\n      >\r\n        <VictoryLabel\r\n          y={25}\r\n          text={texts.month_axis_label}\r\n        />\r\n        <VictoryStack\r\n          colorScale={data.colors}\r\n        >\r\n          {transformData.map((d, i) => {\r\n            return <VictoryBar data={d} barWidth={28} key={i}/>;\r\n          })}\r\n        </VictoryStack>\r\n        <VictoryAxis\r\n          dependentAxis\r\n          tickFormat={(tick) => tick}\r\n        />\r\n        <VictoryAxis\r\n          tickFormat={range(12).map(month => `${month + 1}月`)}\r\n        />\r\n      </VictoryChart>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ColumnChart\r\n","import React from 'react'\r\n\r\nimport Flex from './Flex'\r\nimport Text from './Text'\r\nimport Circle from './Circle'\r\n\r\nconst Icon = ({ data, colors, texts, ...props }) => (\r\n  <Flex justifyContent=\"center\" {...props}>\r\n    {data.map(({ key }, i ) => (\r\n      <Flex alignItems=\"center\" mx=\"0.5em\" justifyContent=\"center\" key={i}>\r\n        <Circle width=\"1em\" bg={colors[i]} />\r\n        <Text mx=\"0.25em\" fontWeight=\"bold\" color=\"text\">{texts[key]}</Text>\r\n      </Flex>\r\n    ))}\r\n  </Flex>\r\n)\r\nexport default Icon\r\n","import React from 'react'\r\n\r\nimport ColumnChart from './ColumnChart'\r\nimport Box from '../../components/Box'\r\nimport Heading from '../../components/Heading'\r\nimport Icon from '../../components/Icon'\r\n\r\nconst PercentChart = ({ data, texts, ...props }) => {\r\n  return (\r\n    <Box py=\"1em\" px=\"1.5em\" {...props}>\r\n      <Heading.H4\r\n        fontSize=\"1.5em\"\r\n      >{texts.month_title}</Heading.H4>\r\n      <ColumnChart data={data} texts={texts} />\r\n      <Icon data={data.months[0]} colors={data.colors} texts={texts} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PercentChart\r\n","import React from 'react'\r\nimport {\r\n  VictoryChart,\r\n  VictoryStack,\r\n  VictoryGroup,\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryLabel,\r\n  VictoryTooltip,\r\n  VictoryVoronoiContainer,\r\n} from 'victory'\r\nimport round from 'lodash/round';\r\n\r\nimport Box from '../../components/Box'\r\n\r\nconst ColumnChart = ({ data, texts, ...props }) => {\r\n  const transformData = data.areas.reduce((res, {label, med_accepted, med_pending, med_rejected}, index) => {\r\n    res.forEach((dataset, i) => {\r\n      if (!i) {\r\n        dataset.push({ x: label, y: med_accepted * 100, key: 'med_accepted'})\r\n      } else if (i === res.length - 1) {\r\n        dataset.push({ x: label, y: med_pending * 100, key: 'med_pending'})\r\n      } else {\r\n        dataset.push({ x: label, y: med_rejected * 100, key: 'med_rejected'})\r\n      }\r\n    })\r\n    return res\r\n  }, [[], [], []])\r\n  const colors = data.colors.map(color => [color])\r\n  console.log(transformData)\r\n  return (\r\n    <Box {...props}>\r\n      <VictoryChart\r\n        domainPadding={{ x: 50 }}\r\n        width={800}\r\n        height={300}\r\n        animate={{ duration: 1000 }}\r\n        containerComponent={\r\n          <VictoryVoronoiContainer\r\n            style={{}}\r\n            labels={({ datum }) => console.log(datum) ||\r\n              datum.y > 0 ? `${texts[datum.key]}${round(datum.y)}%` : null\r\n            }\r\n            voronoiDimension=\"x\"\r\n            labelComponent={<VictoryTooltip  flyoutWidth={80} />}\r\n          />\r\n        }\r\n      >\r\n        <VictoryGroup offset={20} style={{ data: { width: 20 } }}>\r\n          {transformData.map((dataset, i) => (\r\n            <VictoryStack colorScale={colors[i]} key={i}>\r\n              <VictoryBar\r\n                data={dataset.slice(0, 10)}\r\n                barWidth={20}\r\n              />\r\n            </VictoryStack>\r\n          ))}\r\n        </VictoryGroup>\r\n        <VictoryLabel\r\n          y={30}\r\n          x={24}\r\n          text=\"(%)\"\r\n        />\r\n      </VictoryChart>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ColumnChart\r\n","import React from 'react'\r\nimport map from 'lodash/map'\r\n\r\nimport listicon from './listicon.svg'\r\n\r\nimport GroupedBars from './GroupedBars'\r\nimport Box from '../../components/Box'\r\nimport Image from '../../components/Image'\r\nimport Flex from '../../components/Flex'\r\nimport Heading from '../../components/Heading'\r\nimport StatsGroup from '../../components/StatsGroup'\r\nimport Icon from '../../components/Icon'\r\n\r\nconst AreaGroupedBars = ({ data, texts }) => {\r\n  return (\r\n    <Flex>\r\n      <Box width={7 / 10} bg=\"white\" py=\"2em\">\r\n        <Flex justifyContent=\"space-between\" alignItems=\"flex-end\" mx=\"2em\">\r\n          <Heading.H4 fontSize=\"1.5em\">{texts.area_title}</Heading.H4>\r\n          <Icon data={data.months[0]} colors={data.colors} texts={texts} />\r\n        </Flex>\r\n        <GroupedBars data={data} texts={texts} />\r\n      </Box>\r\n      <Box width={3 / 10} height=\"50vh\" overflowY=\"scroll\" p=\"2em\">\r\n        <Flex alignItems=\"center\">\r\n          <Box width=\"3em\" mr=\"0.25em\">\r\n            <Image src={listicon} />\r\n          </Box>\r\n          <Heading.H4 lineHeight=\"1\" fontSize=\"1.5em\">{texts.area_list}</Heading.H4>\r\n        </Flex>\r\n        <Box mt=\"1.5em\">\r\n        {data.areas.slice(10).map((dataset, k) => {\r\n          const iconData = map(dataset, (value, key) => (\r\n            { key, value }\r\n          ))\r\n          return (\r\n            <Box key={k}>\r\n              <Flex alignItems=\"flex-end\">\r\n                <Heading.H4 lineHeight=\"1\" fontSize=\"1.125em\" mr=\"0.5rem\">{dataset.label}</Heading.H4>\r\n                <Heading.H6>{texts.area_list_label}</Heading.H6>\r\n              </Flex>\r\n              <StatsGroup\r\n                my=\"1em\"\r\n                values={iconData.slice(1).map(({ key, value }, i) => ({\r\n                  label: texts[key],\r\n                  color: data.colors[i],\r\n                  value,\r\n                }))}\r\n              />\r\n            </Box>\r\n          )\r\n        })}\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AreaGroupedBars\r\n","import { useMemo } from 'react'\r\nimport useFetch from 'use-http'\r\nimport sortBy from 'lodash/sortBy'\r\n\r\nimport theme from '../components/ThemeProvider/theme'\r\n\r\nconst totals = [\r\n  'med_total',\r\n  'total',\r\n]\r\n\r\nconst keys = [\r\n  'med_accepted',\r\n  'med_rejected',\r\n  'med_pending',\r\n]\r\n\r\nconst dataHandler = (d) => {\r\n  const total = d.reduce((res, { value }) => {\r\n    res = res + value\r\n    return res\r\n  }, 0)\r\n  const dountData = d.map(({ label, value }) => (\r\n    {\r\n      y: value / total,\r\n      x: label\r\n    }\r\n  ))\r\n  return dountData\r\n}\r\n\r\nexport default (year) => {\r\n  const { data } = useFetch(`data?year=${year}`, null, [year]) // onMount\r\n\r\n  return useMemo(() => {\r\n    if (!data) return data\r\n    const summary = {}\r\n    const months = []\r\n    const areaData = {}\r\n    data.meds.forEach(({ month, areas }) => {\r\n      const monthData = {}\r\n      areas.forEach(({ stats, areaname }) => {\r\n        areaData[areaname] = areaData[areaname] || {}\r\n        keys.forEach((key) => {\r\n          summary[key] = summary[key] || 0\r\n          summary[key] += stats[key]\r\n\r\n          monthData[key] = monthData[key] || 0\r\n          monthData[key] += stats[key]\r\n\r\n          areaData[areaname][key] = areaData[areaname][key] || 0\r\n          areaData[areaname][key] += stats[key]\r\n        })\r\n        totals.forEach(key => {\r\n          summary[key] = summary[key] || 0\r\n          summary[key] += stats[key]\r\n\r\n          areaData[areaname][key] = areaData[areaname][key] || 0\r\n          areaData[areaname][key] += stats[key]\r\n        })\r\n      })\r\n      months.push(\r\n          keys.map(key => ({\r\n          x: month,\r\n          key,\r\n          y: monthData[key],\r\n          value: monthData[key],\r\n        })),\r\n      )\r\n    })\r\n    const areas = Object.entries(areaData).map(([label, stats]) => ({\r\n      label,\r\n      ...keys.reduce((all, key) => {\r\n        all[key] = stats[key] / stats.med_total\r\n        return all\r\n      }, {})\r\n    }));\r\n    return {\r\n      areas: sortBy(areas, 'med_accepted').reverse(),\r\n      summary: {\r\n        total: summary.total,\r\n        meds: keys.map(key => ({\r\n          key,\r\n          value: summary[key] / summary.med_total,\r\n        })),\r\n      },\r\n      months,\r\n      keys,\r\n      colors: [\r\n        theme.colors.primary,\r\n        theme.colors.darkBlue,\r\n        theme.colors.lightBlue,\r\n      ],\r\n      channel: dataHandler(data.channel),\r\n    }\r\n  }, [data])\r\n}\r\n","import useFetch from 'use-http'\r\n\r\nconst defaultTexts = {\r\n  \"title\": \"案件聲請與受理數據\",\r\n  \"total\": \"受理總案件數\",\r\n  \"med_total\": \"調解結果案件數\",\r\n  \"med_accepted\": \"成立\",\r\n  \"med_rejected\": \"不成立\",\r\n  \"med_pending\": \"未結\",\r\n  \"channel_title\": \"聲請案件類別\",\r\n  \"channel_label\": \"總受理案類別\",\r\n  \"month_title\": \"每月受理案件與調解結果比例\",\r\n  \"month_axis_label\": \"總申請案件數\",\r\n  \"area_title\": \"各區調解結果 TOP10\",\r\n  \"area_list\": \"各區調解結果（全部）\",\r\n  \"area_list_label\": \"案件受理狀況\"\r\n}\r\n\r\nexport default () => {\r\n  const { data, error } = useFetch('texts', null, []) // onMount\r\n  if (error) return defaultTexts\r\n  return data ? Object.assign(defaultTexts, data) : {}\r\n}\r\n","import React from 'react'\r\nimport Box from '../components/Box'\r\nimport Flex from '../components/Flex'\r\nimport Text from '../components/Text'\r\nimport FullpageHeight from '../components/FullpageHeight'\r\n\r\nimport YearDropdown from './YearDropdown'\r\n\r\nimport Board from '../components/Board'\r\nimport CaseSummary from './CaseSummary'\r\nimport TypeDonut from './TypeDonut'\r\nimport PercentChart from './PercentChart'\r\nimport AreaGroupedBars from './AreaGroupedBars'\r\nimport useData from './useData'\r\nimport useTexts from './useTexts'\r\n\r\nconst HomePage = () => {\r\n  const [year, setYear] = React.useState(new Date().getFullYear() - 1911)\r\n  const texts = useTexts()\r\n  const data = useData(year)\r\n  console.log(data)\r\n  return (\r\n    <FullpageHeight p=\"4em\" minWidth={800}>\r\n      <Flex alignItems=\"center\" fontWeight=\"bold\">\r\n        <YearDropdown value={year} onChange={setYear} />\r\n        <Text.H2 fontSize=\"1.75em\" mx=\"1em\">{texts.title}</Text.H2>\r\n      </Flex>\r\n      {data && (\r\n        <>\r\n          <Board as={Flex} my=\"2.5em\">\r\n            <CaseSummary bg=\"paleBlue\" width=\"22%\" p=\"1.5em\" data={data} texts={texts} />\r\n            <TypeDonut width=\"26%\" data={data} texts={texts} />\r\n            <PercentChart width=\"52%\" data={data} texts={texts} />\r\n          </Board>\r\n          <Board my=\"2.5em\">\r\n            <AreaGroupedBars data={data} texts={texts} />\r\n          </Board>\r\n        </>\r\n      )}\r\n    </FullpageHeight>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\n\r\nimport HomePage from './containers/HomePage'\r\n\r\nfunction App() {\r\n  return (\r\n    <HomePage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ThemeProvider from './components/ThemeProvider'\r\nimport MediaProvider from './contexts/mediaQuery/MediaProvider'\r\nimport ApiProvider from './contexts/api/Provider'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider>\r\n    <MediaProvider>\r\n      <ApiProvider>\r\n        <App />\r\n      </ApiProvider>\r\n    </MediaProvider>\r\n  </ThemeProvider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}